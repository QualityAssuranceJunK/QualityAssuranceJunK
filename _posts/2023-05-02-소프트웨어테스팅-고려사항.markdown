---
layout: post
title: "소프트웨어 테스팅은 고려사항 (Part 1.)"
date: 2023-05-02 00:00:00 +0800
description: # Add post description (optional)
img: software.jpg # Add image post (optional)
tags: [Productivity, Software, QA] # add tag
---

(* 해당문서는 KS X ISO/IEC/IEEE29119 - Part 1을 기준으로 작성함)

KS X ISO/IEC/IEEE 29119-1은 테스팅의 개념과 정의를 진행한다.
해당 표준은 모든 소프트웨어 개발 생명 주기 (Life Cycle) 모델의 테스팅에 적용할 수 있다.

---
## 그럼 왜 소프트웨어 테스팅의 고려사항은 무엇일까?
---

앞에서 소프트웨어 테스팅의 필요성을 역설을 하였으면, 그럼 테스팅을 할때 고려해야하는 사항들은 과연 무엇일까?

1. 테스팅은 프로세스를 갖는다. 프로세스는 입/출력을 변환시키는, 상호 연관될 활동 또는 상호작용하는 활동의 집합이다.
2. 조직 차원의 테스트 프로세스 세트 그리고 조직의 프로젝트와 기능 전반에 적용되는 테스트 정책 및 전략을 유지한다.
3. 테스팅은 계획, 모니터링 및 통제을 통해서, 모든 개발 생명주기와 탐색적 테스팅 관리에 적용이 되어야 한다.
(테스트 프로세스 및 하위 프로세으에 적용되어 함)
4. 테스팅은 테스트 항목 평가를 수반한다.
5. 검증(verfication)은 지정된 요구사항이 작업 항목에서 충적되었는지 객관적인 증거를 제공한다.
6. 확인(verify)은 사용자가 기대하는 요구사항이 해당기능을 통해 구현됨을 보여준다.
7. 테스팅은 정/동적의 검증과 확인이라는 두가지 유형의 확신이 필요하다.
8. 테스팅은 컴퓨터에서 제품을 실행하지 않고 제품에 대한 테스팅을 수행할 수 있다.(* 다른 표준에서는 검토, 워크스루, 인스펙션으로 세분화하여 설명을 하기도 함) 

이와 같은 고려사항을 충족시키기 위해서 구체적으로 어떻게 접근을 해야할끼?

모든 시스템과 소프트웨어들은 복잡성으로 인해 주어진 테스트 항목들을 여러각도에서 테스트하는 것은 사실상 불가능하다.

그렇기에 테스터는 테스팅 항목에 대한 테스트 목표 및 활동을 설정을 통해 접근하는 것이 좋다. (* ex: 리스크 기반 테스팅)

이와 더불어 발견적인 방법의 테스팅(경험적 기반 테스팅)을 통해서 여러가지의 문제의 해결 및 설계에 도움을 줄 수 있다.

하지만 떄때로는 문제를 해결못하거나, 부분적으로 해결을 할 수 있기에 여러가지의 테스트 전략을 같이 사용함으로 써 달성할 수 있을 것이다.

조직과 프로젝트의 관점에서 본다면, 이러한 것들은 매번 바뀔 수고 그렇게 된다면 적용 및 실행을 통한 효과가 미비할 수 있기에 이를 제도화하는 것이 정말로 중요하다.

즉 정형화된 전략을 통해 보다 효과적인 전략을 수행할 수 있도록 한다.